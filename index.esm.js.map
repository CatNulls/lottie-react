{"version":3,"file":"index.esm.js","sources":["../src/types.ts","../src/utils/SubscriptionManager.ts","../src/utils/getNumberFromNumberOrPercentage.ts","../src/utils/isFunction.ts","../src/utils/logger.ts","../src/utils/normalizeAnimationSource.ts","../src/hooks/useCallbackRef.ts","../src/hooks/usePreviousState.ts","../src/hooks/useLottieState.ts","../src/hooks/useLottie.tsx","../src/components/player/PlayerContainer.tsx","../src/components/player/PlayerDisplay.tsx","../src/components/misc/Spacer.tsx","../src/components/player/PlayerControlsFramesIndicator.tsx","../node_modules/style-inject/dist/style-inject.es.js","../src/components/player/PlayerControlsProgressBar/PlayerControlsProgressBar.tsx","../src/config.ts","../src/components/misc/SvgButton.tsx","../src/components/player/buttons/LoopButton.tsx","../src/components/player/buttons/PauseButton.tsx","../src/components/player/buttons/PlayButton.tsx","../src/components/player/PlayerControls.tsx","../src/components/player/PlayerOverlay.tsx","../src/components/player/PlayerFailure.tsx","../src/components/player/PlayerLoading/PlayerLoading.tsx","../src/components/Lottie.tsx"],"sourcesContent":["import {\n  AnimationEventName,\n  AnimationItem,\n  AnimationSegment,\n  CanvasRendererConfig,\n  HTMLRendererConfig,\n  SVGRendererConfig,\n} from \"lottie-web\";\nimport { AnimationEventHandler, RefCallback, RefObject } from \"react\";\nimport { SubscriptionManager } from \"./utils/SubscriptionManager\";\n\n/**\n * Object returned by `useCallbackRef()`\n */\nexport type CallbackRefHookResult<T = unknown> = {\n  ref: RefObject<T>;\n  setRef: RefCallback<T>;\n};\n\n/**\n * Render types that Lottie's animation supports\n */\nexport enum AnimationRenderer {\n  Svg = \"svg\",\n  Html = \"html\",\n  Canvas = \"canvas\",\n}\n\n/**\n * Shape of the internal listener\n */\nexport type InternalListener = {\n  name: AnimationEventName;\n  handler: AnimationEventHandler;\n};\n\n/**\n * Enum with Lottie's subscription types\n */\nexport enum LottieSubscription {\n  Load = \"load\",\n  Failure = \"failure\",\n  Ready = \"ready\",\n  Play = \"play\",\n  Pause = \"pause\",\n  Stop = \"stop\",\n  Freeze = \"freeze\",\n  LoopCompleted = \"loop_completed\",\n  Complete = \"complete\",\n  Frame = \"frame\",\n  NewState = \"new_state\",\n}\n\n/**\n * The generic type for the subscription's action\n */\nexport type LottieSubscriptionAction<T = unknown> = (event: T) => void;\n\n/**\n * Describing the action to take for each subscription type\n */\nexport type LottieSubscriptions = {\n  [LottieSubscription.Frame]: LottieSubscriptionAction<{ currentFrame: number }>;\n  [LottieSubscription.Complete]: LottieSubscriptionAction;\n  [LottieSubscription.LoopCompleted]: LottieSubscriptionAction;\n  [LottieSubscription.Ready]: LottieSubscriptionAction;\n  [LottieSubscription.Play]: LottieSubscriptionAction;\n  [LottieSubscription.Pause]: LottieSubscriptionAction;\n  [LottieSubscription.Stop]: LottieSubscriptionAction;\n  [LottieSubscription.Failure]: LottieSubscriptionAction;\n  [LottieSubscription.NewState]: LottieSubscriptionAction<{ state: LottieState }>;\n};\n\n/**\n * Enum with the Lottie's states\n */\nexport enum LottieState {\n  Loading = \"loading\",\n  Playing = \"playing\",\n  Paused = \"paused\",\n  Stopped = \"stopped\",\n  Frozen = \"frozen\",\n  Failure = \"failure\",\n}\n\n/**\n * Options for the `useLottie()` hook\n *\n * These options are wrapping Lottie's config properties and ads\n * additional ones in order to have a better control over the animation\n */\nexport type LottieHookOptions<Renderer extends AnimationRenderer = AnimationRenderer.Svg> = {\n  src: string | Record<string | number | symbol, unknown>;\n  initialValues?: {\n    loop?: boolean | number;\n    autoplay?: boolean;\n    segment?: AnimationSegment;\n    assetsPath?: string;\n    rendererSettings?: {\n      svg: SVGRendererConfig;\n      canvas: CanvasRendererConfig;\n      html: HTMLRendererConfig;\n    }[Renderer];\n  };\n  enableReinitialize?: boolean;\n  debug?: boolean;\n  subscriptions?: Partial<LottieSubscriptions>;\n\n  // TODO: add support for the following\n  // renderer?: Renderer;\n  // audioFactory?(assetPath: string): {\n  //   play(): void;\n  //   seek(): void;\n  //   playing(): void;\n  //   rate(): void;\n  //   setVolume(): void;\n  // };\n};\n\n/**\n * Object returned by `useLottie()`\n */\nexport type LottieHookResult = {\n  setContainerRef: RefCallback<HTMLDivElement>;\n  animationItem: AnimationItem | null;\n  state: LottieState;\n  loop: boolean | number;\n  play: () => void;\n  pause: () => void;\n  stop: () => void;\n  toggleLoop: () => void;\n  setSpeed: (speed: number) => void;\n  seek: (value: number | string, isSeekingEnded: boolean) => void;\n  subscribe: SubscriptionManager<LottieSubscriptions>[\"subscribe\"];\n  totalFrames: number;\n};\n\n/**\n * Options for the `useLottieState()` hook\n */\nexport type LottieStateHookOptions = {\n  initialState: LottieState;\n  onChange?: (previousState: undefined | LottieState, newState: LottieState) => void;\n};\n\n/**\n * Enum with the PlayerControls' elements\n */\nexport enum PlayerControlsElement {\n  Play = \"play\",\n  Pause = \"pause\",\n  FramesIndicator = \"framesIndicator\",\n  ProgressBar = \"progressBar\",\n  Loop = \"loop\",\n}\n\n/**\n * Properties for the `Lottie` component\n */\nexport type LottieProps = LottieHookOptions & {\n  controls?: boolean | PlayerControlsElement[];\n  LoadingOverlay?: JSX.Element;\n  FailureOverlay?: JSX.Element;\n  LoadingOverlayContent?: JSX.Element;\n  FailureOverlayContent?: JSX.Element;\n};\n","import { EventEmitter } from \"events\";\n\n/**\n * Used to emit typed events to internal component and/or consumer handlers\n *\n * * USE CASE\n * * Instead of storing the `currentFrame` value (which would've rerender\n * * the parent and all the child components) we are letting consumers subscribe to it.\n * * This way we avoid rerender all the components on evey new frame and the consumer\n * * can pass it directly to elements (e.g. `<input>`) using `Ref`s.\n *\n * TODO: revisit the typing and see if we can do better\n *\n * @internal\n */\nexport class SubscriptionManager<Subscriptions> {\n  subscriptionManager = new EventEmitter();\n\n  /**\n   * Subscribe to a specific subscription type\n   * @param type\n   * @param action\n   */\n  public subscribe = <Type extends keyof Subscriptions>(\n    type: Type,\n    action: Subscriptions[Type],\n  ): (() => void) => {\n    this.subscriptionManager.on(String(type), action as unknown as () => void);\n\n    // Return a function to unsubscribe\n    return () => this.subscriptionManager.off(String(type), action as unknown as () => void);\n  };\n\n  /**\n   * Subscribe to multiple notification types using an object\n   * @param subscriptions\n   */\n  public addSubscriptions = (subscriptions?: Partial<Subscriptions>): (() => void) => {\n    const eventListenerRemovers: (() => void)[] = [];\n\n    if (subscriptions) {\n      for (const type in subscriptions) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        eventListenerRemovers.push(this.subscribe(type, subscriptions[type]));\n      }\n    }\n\n    // Return a function to unregister all the listeners\n    return () => eventListenerRemovers.forEach((deregister) => deregister());\n  };\n\n  /**\n   * Send a notification to all the subscribers\n   * @param type\n   * @param payload\n   */\n  public notify = <Type extends keyof Subscriptions>(\n    type: Type,\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    payload: Parameters<Subscriptions[Type]>[0],\n  ) => this.subscriptionManager.emit(String(type), payload);\n}\n","/**\n * Extract a number from a number or percentage\n * @param value\n */\nconst getNumberFromNumberOrPercentage = (value: string | number) => {\n  const matches = /^(([0-9]*[.])?[0-9]+)(%?)$/.exec(String(value));\n\n  if (matches?.[1]) {\n    return {\n      number: Number(matches[1]),\n      isPercentage: matches[3] === \"%\",\n    };\n  }\n\n  return null;\n};\n\nexport default getNumberFromNumberOrPercentage;\n","const isFunction = (value: unknown) => typeof value === \"function\";\n\nexport default isFunction;\n","/**\n * Keep the state of the logger\n */\nimport isFunction from \"./isFunction\";\n\nlet isLoggerActive = true;\n\n/**\n * Set if the logs should appear or not\n * @param isActive\n */\nexport const setLogger = (isActive: boolean) => {\n  isLoggerActive = isActive;\n};\n\n/**\n * Prefix a message with a custom message\n * @param message\n */\nconst prefixMessage = (message?: string) =>\n  `[lottie-react]${message !== undefined ? ` ${message}` : \"\"}`;\n\n/**\n * Method to wrap console's log methods\n * @param method\n */\nconst customLogger =\n  (method: typeof console.log) =>\n  (message?: string, ...optionalParams: unknown[]) => {\n    isLoggerActive && isFunction(method) && method(prefixMessage(message), ...optionalParams);\n  };\n\n/**\n * Custom Logger\n */\nconst logger = {\n  // eslint-disable-next-line no-console\n  log: customLogger(console.log),\n  // eslint-disable-next-line no-console\n  error: customLogger(console.error),\n  // eslint-disable-next-line no-console\n  warn: customLogger(console.warn),\n  // eslint-disable-next-line no-console\n  info: customLogger(console.info),\n};\n\nexport default logger;\n","/**\n * Check if the value is a valid animation source that can be passed to Lottie\n * @param source\n */\nconst normalizeAnimationSource = (source: unknown) => {\n  // If JSON file\n  if (source && typeof source === \"string\" && source.endsWith(\".json\")) {\n    return { path: source };\n  }\n\n  // If object\n  if (source && typeof source === \"object\") {\n    return { animationData: source };\n  }\n\n  return null;\n};\n\nexport default normalizeAnimationSource;\n","import { useCallback, useState } from \"react\";\nimport { CallbackRefHookResult } from \"../types\";\n\n/**\n * Ref that rerender on change\n * TODO: check if it's the MOST efficient way to do it\n * @param initialValue\n */\nconst useCallbackRef = <T = unknown>(initialValue?: T): CallbackRefHookResult<T> => {\n  const [current, setCurrent] = useState<T | null>(initialValue ?? null);\n\n  const setRef = useCallback<(node: T) => void>((node) => {\n    setCurrent(node);\n  }, []);\n\n  return { ref: { current }, setRef };\n};\n\nexport default useCallbackRef;\n","import { useEffect, useRef } from \"react\";\n\n/**\n * Custom hook for getting previous value\n * @param value\n */\nconst usePreviousState = <T = unknown>(value: T) => {\n  const ref = useRef<T>();\n\n  useEffect(() => {\n    ref.current = value;\n  });\n\n  return ref.current;\n};\n\nexport default usePreviousState;\n","import { useEffect, useState } from \"react\";\nimport { LottieState, LottieStateHookOptions } from \"../types\";\nimport isFunction from \"../utils/isFunction\";\nimport usePreviousState from \"./usePreviousState\";\n\n/**\n * Hook that handle the state for LottiePlayer\n * @param options\n */\nconst useLottieState = (options?: LottieStateHookOptions) => {\n  const { initialState, onChange } = options ?? {};\n\n  if (!initialState) {\n    throw new Error(\n      `Please specify the \"options.initialState\" when you use the \"useLottiePlayerState\" hook.`,\n    );\n  }\n\n  const [state, setState] = useState<LottieState>(initialState);\n  const previousState = usePreviousState(state);\n\n  useEffect(() => {\n    if (onChange && isFunction(onChange)) {\n      onChange(previousState, state);\n    }\n  }, [onChange, state, previousState]);\n\n  return {\n    previousState,\n    state,\n    setState,\n  };\n};\n\nexport default useLottieState;\n","import lottie, { AnimationItem, AnimationSegment } from \"lottie-web\";\nimport { useCallback, useEffect, useMemo, useRef, useState } from \"react\";\nimport isEqual from \"react-fast-compare\";\nimport {\n  InternalListener,\n  LottieSubscription,\n  LottieSubscriptions,\n  LottieHookOptions,\n  LottieHookResult,\n  LottieState,\n} from \"../types\";\nimport { SubscriptionManager } from \"../utils/SubscriptionManager\";\nimport getNumberFromNumberOrPercentage from \"../utils/getNumberFromNumberOrPercentage\";\nimport logger from \"../utils/logger\";\nimport normalizeAnimationSource from \"../utils/normalizeAnimationSource\";\nimport useCallbackRef from \"./useCallbackRef\";\nimport useLottieState from \"./useLottieState\";\n\n/**\n * Lottie's animation hook\n * @param options\n */\nexport const useLottie = ({\n  src,\n  enableReinitialize = false,\n  ...rest\n}: LottieHookOptions): LottieHookResult => {\n  const options = {\n    enableReinitialize,\n    ...rest,\n  };\n\n  // (Ref) Animation's container\n  // By using a callback ref, a rerender will be trigger when its value changed\n  // this way the consumer have the option to set the container, and we know\n  // when, and if, the animation should be (re)loaded\n  const { ref: containerRef, setRef: setContainerRef } = useCallbackRef<HTMLDivElement>();\n\n  // (State) Animation instance\n  const [animationItem, setAnimationItem] = useState<AnimationItem | null>(null);\n\n  // (State) Subscription manager\n  const subscriptionManager = useMemo(() => new SubscriptionManager<LottieSubscriptions>(), []);\n\n  // (State) Animation's state\n  const { previousState, state, setState } = useLottieState({\n    initialState: LottieState.Loading,\n    onChange: (previousPlayerState, newPlayerState) => {\n      // Let the subscribers know about the new state\n      subscriptionManager.notify(LottieSubscription.NewState, { state: newPlayerState });\n    },\n  });\n\n  // (Ref) Initial values provided by the consumer\n  const _initialValues = useRef(options.initialValues);\n  const _subscriptions = useRef<Partial<LottieSubscriptions> | undefined>(undefined);\n\n  // (State) Initial states converted to local states\n  const [loop, setLoop] = useState<boolean | number>(options.initialValues?.loop || false);\n  const [autoplay, setAutoplay] = useState<boolean>(options.initialValues?.autoplay || false);\n  const [initialSegment, setInitialSegment] = useState<AnimationSegment | undefined>(\n    options.initialValues?.segment || undefined,\n  );\n\n  // (State) Animation's state before seeking\n  // By keeping this we can pause the animation while the seeking action is\n  // happening and return to it immediately, offering a smooth experience\n  const [stateBeforeSeeking, setStateBeforeSeeking] = useState<LottieState | null>(null);\n\n  /**\n   * (Re)initialize the animation when the container and/or source change\n   */\n  useEffect(\n    () => {\n      logger.log(\"🪄 Trying to (re)initialize the animation\");\n\n      // Set the state to loading until the animation is (re)initialized\n      setState((prevState) =>\n        prevState === LottieState.Loading ? prevState : LottieState.Loading,\n      );\n\n      // Checks that the container is ready\n      if (!containerRef?.current) {\n        logger.log(\"⌛️ The container is not ready yet\");\n        return;\n      }\n\n      // Destroy any previous animation\n      if (animationItem) {\n        logger.log(\"🗑 Animation already initialized, destroying it\");\n        animationItem.destroy();\n      }\n\n      // Checks if the animation's source have the right format\n      const normalizedAnimationSource = normalizeAnimationSource(src);\n\n      if (!normalizedAnimationSource) {\n        logger.log(\"😥 Animation source is not valid\");\n        subscriptionManager.notify(LottieSubscription.Failure, undefined);\n        setState((prevState) =>\n          prevState === LottieState.Failure ? prevState : LottieState.Failure,\n        );\n        return;\n      }\n\n      // Initialize animation\n      let _animationItem: AnimationItem;\n\n      try {\n        _animationItem = lottie.loadAnimation({\n          ...normalizedAnimationSource,\n          container: containerRef.current,\n          renderer: \"svg\",\n          loop,\n          autoplay,\n          initialSegment,\n          assetsPath: _initialValues.current?.assetsPath,\n          rendererSettings: _initialValues.current?.rendererSettings,\n        });\n      } catch (e) {\n        logger.warn(\"⚠️ Error while trying to load animation\", e);\n        subscriptionManager.notify(LottieSubscription.Failure, undefined);\n        setState((prevState) =>\n          prevState === LottieState.Failure ? prevState : LottieState.Failure,\n        );\n        return;\n      }\n\n      // Save Lottie's animation item\n      logger.log(\"👌 Animation was initialized\", _animationItem);\n      setAnimationItem(_animationItem);\n\n      // Register the internal listeners for the animation's events\n      const registerInternalListeners = () => {\n        const internalListeners: InternalListener[] = [\n          {\n            name: \"complete\",\n            handler: () => {\n              setState(LottieState.Stopped);\n              subscriptionManager.notify(LottieSubscription.Complete, undefined);\n            },\n          },\n          {\n            name: \"loopComplete\",\n            handler: () => {\n              subscriptionManager.notify(LottieSubscription.LoopCompleted, undefined);\n            },\n          },\n          {\n            name: \"enterFrame\",\n            handler: () => {\n              if (_animationItem) {\n                subscriptionManager.notify(LottieSubscription.Frame, {\n                  currentFrame: _animationItem.currentFrame,\n                });\n              }\n            },\n          },\n          { name: \"segmentStart\", handler: () => undefined },\n          { name: \"config_ready\", handler: () => undefined },\n          {\n            name: \"data_ready\",\n            handler: () => {\n              subscriptionManager.notify(LottieSubscription.Ready, undefined);\n            },\n          },\n          {\n            name: \"data_failed\",\n            handler: () => {\n              setState(LottieState.Failure);\n            },\n          },\n          { name: \"loaded_images\", handler: () => undefined },\n          {\n            name: \"DOMLoaded\",\n            handler: () => {\n              setState(_animationItem?.autoplay ? LottieState.Playing : LottieState.Stopped);\n            },\n          },\n          { name: \"destroy\", handler: () => undefined },\n        ];\n\n        const internalListenerRemovers = internalListeners.map((listener) => {\n          try {\n            _animationItem?.addEventListener(listener.name, listener.handler);\n          } catch (e) {\n            // * There might be cases in which the `animationItem` exists but\n            // * it's not ready yet, and in that case `addEventListener` will\n            // * throw an error. That's why we skip these errors.\n          }\n\n          // Return a function to deregister this listener\n          return () => {\n            try {\n              _animationItem?.removeEventListener(listener.name, listener.handler);\n            } catch (e) {\n              // * There might be cases in which the `animationItem` exists but\n              // * it was destroyed, and in that case `removeEventListener` will\n              // * throw an error. That's why we skip these errors.\n            }\n          };\n        });\n\n        logger.log(\"👂 Internal listeners were registered\");\n\n        // Return a function to unregister all the listeners\n        return () => {\n          internalListenerRemovers.forEach((deregister) => deregister());\n        };\n      };\n\n      const unregisterInternalListeners = registerInternalListeners();\n\n      // Cleanup sequence on unmount\n      return () => {\n        logger.log(\"🧹 Animation is unloading, cleaning up...\");\n        unregisterInternalListeners();\n        _animationItem.destroy();\n        setAnimationItem(null);\n      };\n    },\n    // * We are disabling the `exhaustive-deps` here because we want to\n    // * (re)initialise only when the container ref and/or the source change\n    // ! DON'T CHANGE because we will end up having the \"Maximum update depth exceeded\" error\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [containerRef.current, src],\n  );\n\n  /**\n   * Process initial values changes and update any dependent state\n   */\n  useEffect(() => {\n    // Skip update if there is no animation item, reinitialization is not enabled\n    // or the initial values are the same with the previous ones\n    if (\n      !animationItem ||\n      !enableReinitialize ||\n      isEqual(_initialValues.current, options.initialValues)\n    ) {\n      return;\n    }\n\n    // Save the new values\n    _initialValues.current = options.initialValues;\n\n    // Loop\n    setLoop((prevState) => {\n      // Skip update if equal\n      if (_initialValues.current?.loop === prevState) {\n        return prevState;\n      }\n\n      const newState = _initialValues.current?.loop ?? false;\n      // * Typing is wrong in `lottie-web`; loop can accept boolean AND number\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      animationItem.loop = newState;\n      return newState;\n    });\n\n    // Autoplay\n    setAutoplay((prevState) => {\n      // Skip update if equal\n      if (_initialValues.current?.autoplay === prevState) {\n        return prevState;\n      }\n\n      const newState = _initialValues.current?.autoplay ?? false;\n      animationItem.autoplay = newState;\n      return newState;\n    });\n\n    // TODO: handle initialSegment change\n    // Initial segment\n    // useEffect(() => {\n    //   if (!animationItem) {\n    //     return;\n    //   }\n    //\n    //   // When null should reset to default animation length\n    //   if (!initialSegment) {\n    //     animationItem.resetSegments(false);\n    //     // TODO: find a way to increase the totalFrames to the max in the current loop\n    //     return;\n    //   }\n    //\n    //   // If it's not a valid segment, do nothing\n    //   if (!Array.isArray(initialSegment) || !initialSegment.length) {\n    //     return;\n    //   }\n    //\n    //   // If the current frame it's not in the new initial segment\n    //   // set the current frame to the first position of the initial segment\n    //   if (\n    //     animationItem.currentRawFrame < initialSegment[0] ||\n    //     animationItem.currentRawFrame > initialSegment[1]\n    //   ) {\n    //     animationItem.currentRawFrame = initialSegment[0];\n    //   }\n    //\n    //   // Update the segment\n    //   animationItem.setSegment(initialSegment[0], initialSegment[1]);\n    // }, [animationItem, initialSegment]);\n\n    // TODO: handle assetsPath change\n\n    // TODO: handle rendererSettings change\n  }, [animationItem, enableReinitialize, options.initialValues]);\n\n  /**\n   * Checks for and (re)register the consumer's subscriptions\n   */\n  useEffect(() => {\n    // Skip update if there is no subscription manager\n    // or the new subscriptions are the same with the previous ones\n    if (!subscriptionManager || isEqual(_subscriptions.current, options.subscriptions)) {\n      return;\n    }\n\n    // Save the new subscriptions\n    _subscriptions.current = options.subscriptions;\n\n    // Register consumer's subscriptions\n    const unregisterConsumerSubscriptions = subscriptionManager.addSubscriptions(\n      options.subscriptions,\n    );\n\n    logger.log(\"👂 Consumer's subscriptions were registered\");\n\n    return () => {\n      logger.log(\"🧹 Unregistering consumer's subscriptions...\");\n      unregisterConsumerSubscriptions();\n    };\n  }, [subscriptionManager, options.subscriptions]);\n\n  /**\n   * Interaction methods\n   */\n  // Play\n  const play = useCallback(() => {\n    if (animationItem) {\n      animationItem.play();\n      setState(LottieState.Playing);\n      subscriptionManager.notify(LottieSubscription.Play, undefined);\n    }\n  }, [animationItem, subscriptionManager, setState]);\n\n  // Pause\n  const pause = useCallback(() => {\n    if (animationItem) {\n      animationItem.pause();\n      setState(LottieState.Paused);\n      subscriptionManager.notify(LottieSubscription.Pause, undefined);\n    }\n  }, [animationItem, subscriptionManager, setState]);\n\n  // Stop\n  const stop = useCallback(() => {\n    if (animationItem) {\n      animationItem.goToAndStop(1);\n      setState(LottieState.Stopped);\n      subscriptionManager.notify(LottieSubscription.Stop, undefined);\n    }\n  }, [animationItem, subscriptionManager, setState]);\n\n  // Toggle looping\n  const toggleLoop = useCallback(() => {\n    if (animationItem) {\n      animationItem.loop = !animationItem.loop;\n      setLoop(animationItem.loop);\n    }\n  }, [animationItem]);\n\n  // Set player speed\n  const setSpeed = useCallback(\n    (speed: number) => {\n      if (animationItem) {\n        animationItem?.setSpeed(speed);\n      }\n    },\n    [animationItem],\n  );\n\n  /**\n   * Change the current frame from the animation\n   * @param value\n   * @param isSeekingEnded\n   */\n  const seek = useCallback(\n    (value: number | string, isSeekingEnded: boolean) => {\n      if (!animationItem) {\n        return;\n      }\n\n      const seekInfo = getNumberFromNumberOrPercentage(value);\n\n      if (!seekInfo) {\n        return;\n      }\n\n      const frame = seekInfo.isPercentage\n        ? (animationItem.totalFrames * seekInfo.number) / 100\n        : seekInfo.number;\n\n      setState((prevState) => {\n        // Remember the state before seeking, so we can set it back when the seeking is done\n        if (!isSeekingEnded && !stateBeforeSeeking) {\n          setStateBeforeSeeking(prevState);\n        } else if (isSeekingEnded && stateBeforeSeeking) {\n          setStateBeforeSeeking(null);\n        }\n\n        const shouldPlayAfter =\n          isSeekingEnded &&\n          (prevState === LottieState.Playing || stateBeforeSeeking === LottieState.Playing);\n\n        if (shouldPlayAfter) {\n          animationItem?.goToAndPlay(frame, true);\n          return LottieState.Playing;\n        } else {\n          animationItem?.goToAndStop(frame, true);\n\n          if (prevState !== LottieState.Stopped) {\n            return LottieState.Paused;\n          }\n        }\n\n        // Skip update\n        return prevState;\n      });\n    },\n    [animationItem, setState, stateBeforeSeeking],\n  );\n\n  return {\n    setContainerRef,\n    animationItem,\n    state,\n    subscribe: subscriptionManager.subscribe,\n    totalFrames: animationItem?.totalFrames ?? 0,\n    loop,\n    play,\n    pause,\n    stop,\n    toggleLoop,\n    setSpeed,\n    seek,\n  };\n};\n","import React, { DetailedHTMLProps, FC, HTMLAttributes } from \"react\";\n\nexport type PlayerContainerProps = DetailedHTMLProps<\n  HTMLAttributes<HTMLDivElement>,\n  HTMLDivElement\n>;\n\nexport const PlayerContainer: FC<PlayerContainerProps> = (props) => {\n  const { children, ...rest } = props;\n\n  return (\n    <div\n      {...rest}\n      style={{\n        position: \"relative\",\n        width: \"100%\",\n        height: \"100%\",\n        minHeight: 0,\n        minWidth: 0,\n        display: \"flex\",\n        flexDirection: \"column\",\n        ...rest.style,\n      }}\n    >\n      {children}\n    </div>\n  );\n};\n","import React, {\n  DetailedHTMLProps,\n  forwardRef,\n  ForwardRefRenderFunction,\n  HTMLAttributes,\n  useEffect,\n} from \"react\";\nimport logger from \"../../utils/logger\";\n\nexport type PlayerDisplayProps = DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>;\n\n/**\n * Container for displaying the animation\n * @param props\n * @param ref\n */\nconst _PlayerDisplay: ForwardRefRenderFunction<HTMLDivElement, PlayerDisplayProps> = (\n  props,\n  ref,\n) => {\n  const { children, ...rest } = props;\n\n  // Warn about missing `ref` property\n  useEffect(() => {\n    if (!ref) {\n      logger.warn(\n        \"😬 Seems like you forgot to pass the `ref` property to the `PlayerContainer` component.\",\n      );\n    }\n  }, [ref]);\n\n  return (\n    <div\n      {...rest}\n      style={{\n        display: \"flex\",\n        flex: 1,\n        minHeight: 0,\n        minWidth: 0,\n        justifyContent: \"center\",\n        ...rest.style,\n      }}\n      ref={ref}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport const PlayerDisplay = forwardRef(_PlayerDisplay);\n","import React, { FC } from \"react\";\n\ntype SpaceBetweenProps = {\n  size: number;\n};\n\n/**\n * Add a div with padding to the left and right of `size` / 2\n */\nconst Spacer: FC<SpaceBetweenProps> = ({ size }) => (\n  <div style={{ paddingLeft: size / 2, paddingRight: size / 2 }} />\n);\n\nexport default Spacer;\n","import React, { CSSProperties, FC, useCallback, useEffect, useMemo, useRef } from \"react\";\nimport { LottieSubscription, LottieHookResult } from \"../../types\";\n\nexport type PlayerFramesIndicatorProps = Pick<LottieHookResult, \"totalFrames\" | \"subscribe\"> & {\n  decimals?: number;\n};\n\nconst styles: Record<string, CSSProperties> = {\n  container: {\n    display: \"flex\",\n    background: \"rgb(77 77 77)\",\n    fontSize: 12,\n    fontWeight: \"500\",\n    color: \"white\",\n    justifyContent: \"center\",\n    borderRadius: 3,\n  },\n  frameSpan: {\n    padding: \"2px 2px\",\n    minWidth: 30,\n    height: 25,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    textAlign: \"center\",\n  },\n  delimiterSpan: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    textAlign: \"center\",\n  },\n};\n\n/**\n * Show the current frame and the total\n */\nexport const PlayerControlsFramesIndicator: FC<PlayerFramesIndicatorProps> = ({\n  subscribe,\n  totalFrames,\n  decimals,\n}) => {\n  const containerRef = useRef<HTMLSpanElement>(null);\n  const _decimals = useMemo(() => decimals ?? 0, [decimals]);\n  const getFrameSpanMinWidth = useCallback((numberLength: number) => 15 + numberLength * 7, []);\n\n  /**\n   * Listen for event regarding the `currentFrame`\n   */\n  useEffect(() => {\n    if (subscribe) {\n      return subscribe(LottieSubscription.Frame, ({ currentFrame }) => {\n        if (containerRef.current) {\n          containerRef.current.innerText = currentFrame?.toFixed(_decimals);\n        }\n      });\n    }\n  }, [_decimals, subscribe]);\n\n  return (\n    <div style={styles.container}>\n      <span\n        ref={containerRef}\n        style={{\n          ...styles.frameSpan,\n          minWidth: getFrameSpanMinWidth(\n            String(totalFrames).length + (_decimals ? _decimals + 1 : 0),\n          ),\n        }}\n      >\n        0\n      </span>\n\n      <span style={styles.delimiterSpan}>/</span>\n\n      <span\n        style={{\n          ...styles.frameSpan,\n          minWidth: getFrameSpanMinWidth(String(totalFrames).length),\n        }}\n      >\n        {totalFrames}\n      </span>\n    </div>\n  );\n};\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import \"./PlayerControlsProgressBar.less\";\nimport React, { ChangeEventHandler, MouseEventHandler, useEffect, useRef } from \"react\";\nimport { LottieSubscription, LottieHookResult } from \"../../../types\";\nimport isFunction from \"../../../utils/isFunction\";\n\nexport type ProgressBarProps = Pick<LottieHookResult, \"totalFrames\" | \"subscribe\"> & {\n  disabled?: boolean;\n  onChange?: (progress: number, isDraggingEnded?: boolean) => void;\n};\n\n/**\n * Component that show the animation's progress and offer ways to\n * select a new frame from `0` to `totalFrames`\n */\nexport const PlayerControlsProgressBar = (props: ProgressBarProps) => {\n  const containerRef = useRef<HTMLInputElement>(null);\n  const { totalFrames, subscribe, disabled, onChange } = props;\n  const _totalFrames = totalFrames ?? 0;\n  const isListeningForChanges = isFunction(onChange);\n\n  /**\n   * Listen for event regarding the `currentFrame`\n   */\n  useEffect(() => {\n    if (subscribe) {\n      return subscribe(LottieSubscription.Frame, ({ currentFrame }) => {\n        if (containerRef.current) {\n          // Update the `value` of the input range\n          containerRef.current.value = String(currentFrame);\n          // Set the `--value` CSS value so the styling can adapt\n          containerRef.current.style.setProperty(\"--value\", `${currentFrame}`);\n        }\n      });\n    }\n  }, [subscribe]);\n\n  /**\n   * Handle any changes of the progress bar\n   * @param event\n   */\n  const onChangeHandler: ChangeEventHandler<HTMLInputElement> = (event) => {\n    const newFrame = Number(event.target.value);\n\n    if (isListeningForChanges) {\n      onChange?.(newFrame);\n    }\n  };\n\n  /**\n   * Handle mouse up on progress bar\n   */\n  const onMouseUpHandler: MouseEventHandler<HTMLInputElement> = () => {\n    if (isListeningForChanges && containerRef.current) {\n      onChange?.(Number(containerRef.current.value), true);\n    }\n  };\n\n  return (\n    <div style={{ flex: 1 }}>\n      <input\n        ref={containerRef}\n        disabled={disabled || !_totalFrames}\n        className={\"player-controls-progress-bar\"}\n        type=\"range\"\n        style={{\n          /**\n           * Set the current progress percentage as a CSS var, so it can be used in the style\n           * to properly customize the input range styling across browsers\n           *\n           * Source: https://toughengineer.github.io/demo/slider-styler/slider-styler.html\n           */\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          \"--min\": 0,\n          \"--max\": _totalFrames,\n          // \"--value\": 0,\n        }}\n        onChange={onChangeHandler}\n        onMouseUp={onMouseUpHandler}\n        min={0}\n        max={_totalFrames}\n        step={0.001}\n      />\n    </div>\n  );\n};\n","const config = {\n  accentColor: \"#00d1c1\",\n  whiteColor: \"#ffffff\",\n};\n\nexport default config;\n","import React, { FC } from \"react\";\n\nexport type SvgButtonProps = {\n  onClick?: () => void;\n};\n\nconst SvgButton: FC<SvgButtonProps> = ({ children, onClick }) => (\n  <button\n    style={{\n      background: \"rgb(77 77 77)\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      padding: 5,\n      width: 30,\n      height: 25,\n      borderRadius: 3,\n      cursor: \"pointer\",\n      border: 0,\n    }}\n    onClick={onClick}\n  >\n    {children}\n  </button>\n);\n\nexport default SvgButton;\n","import React, { FC } from \"react\";\nimport config from \"../../../config\";\nimport SvgButton, { SvgButtonProps } from \"../../misc/SvgButton\";\n\ntype LoopButtonProps = SvgButtonProps & {\n  isOn?: boolean | number;\n};\n\n// TODO: add support for numbers on `isOn` (for how many times)\nexport const LoopButton: FC<LoopButtonProps> = ({ isOn, onClick }) => (\n  <SvgButton onClick={onClick}>\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"100%\" viewBox=\"0 0 24 24\">\n      <path\n        d=\"M2 12c0 .999.381 1.902.989 2.604l-1.098.732-.587.392c-.814-1.025-1.304-2.318-1.304-3.728 0-3.313 2.687-6 6-6h9v-3l6 4-6 4v-3h-9c-2.206 0-4 1.794-4 4zm20.696-3.728l-.587.392-1.098.732c.608.702.989 1.605.989 2.604 0 2.206-1.795 4-4 4h-9v-3l-6 4 6 4v-3h9c3.313 0 6-2.687 6-6 0-1.41-.489-2.703-1.304-3.728z\"\n        fill={!isOn ? \"#ffffff\" : config.accentColor}\n      />\n    </svg>\n  </SvgButton>\n);\n","import React, { FC } from \"react\";\nimport config from \"../../../config\";\nimport SvgButton, { SvgButtonProps } from \"../../misc/SvgButton\";\n\nexport const PauseButton: FC<SvgButtonProps> = ({ onClick }) => (\n  <SvgButton onClick={onClick}>\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"100%\" viewBox=\"0 0 24 24\">\n      <path d=\"M10 24h-6v-24h6v24zm10-24h-6v24h6v-24z\" fill={config.whiteColor} />\n    </svg>\n  </SvgButton>\n);\n","import React, { FC } from \"react\";\nimport config from \"../../../config\";\nimport SvgButton, { SvgButtonProps } from \"../../misc/SvgButton\";\n\nexport const PlayButton: FC<SvgButtonProps> = ({ onClick }) => (\n  <SvgButton onClick={onClick}>\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"100%\" viewBox=\"0 0 24 24\">\n      <path d=\"M2 24v-24l20 12-20 12z\" fill={config.whiteColor} />\n    </svg>\n  </SvgButton>\n);\n","import React, { FC, useCallback } from \"react\";\nimport { LottieHookResult, LottieState, PlayerControlsElement } from \"../../types\";\nimport Spacer from \"../misc/Spacer\";\nimport { PlayerControlsFramesIndicator } from \"./PlayerControlsFramesIndicator\";\nimport { PlayerControlsProgressBar } from \"./PlayerControlsProgressBar/PlayerControlsProgressBar\";\nimport { LoopButton } from \"./buttons/LoopButton\";\nimport { PauseButton } from \"./buttons/PauseButton\";\nimport { PlayButton } from \"./buttons/PlayButton\";\n\nexport type PlayerControlsProps = Pick<\n  LottieHookResult,\n  \"state\" | \"totalFrames\" | \"loop\" | \"play\" | \"pause\" | \"seek\" | \"toggleLoop\" | \"subscribe\"\n> & {\n  show: boolean;\n  elements?: PlayerControlsElement[];\n};\n\nexport const PlayerControls: FC<PlayerControlsProps> = (props) => {\n  const { show, elements, state, totalFrames, loop, play, pause, seek, toggleLoop, subscribe } =\n    props;\n\n  /**\n   * Checks if the consumer have any preference on what elements we should display\n   */\n  const shouldShowElement = useCallback(\n    (element: PlayerControlsElement) => {\n      // If specific elements weren't specified, display all\n      if (!elements || !Array.isArray(elements)) {\n        return true;\n      }\n\n      // Otherwise, display if `element` is in `elements` array\n      return elements.includes(element);\n    },\n    [elements],\n  );\n\n  if (!show) {\n    return null;\n  }\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        paddingLeft: 10,\n        paddingRight: 10,\n        paddingTop: 10,\n        paddingBottom: 10,\n      }}\n    >\n      {shouldShowElement(PlayerControlsElement.Play) && state !== LottieState.Playing && (\n        <>\n          <PlayButton onClick={play} />\n          <Spacer size={10} />\n        </>\n      )}\n\n      {shouldShowElement(PlayerControlsElement.Pause) && state === LottieState.Playing && (\n        <>\n          <PauseButton onClick={pause} />\n          <Spacer size={10} />\n        </>\n      )}\n\n      {shouldShowElement(PlayerControlsElement.FramesIndicator) && (\n        <>\n          <PlayerControlsFramesIndicator\n            subscribe={subscribe}\n            totalFrames={totalFrames || 0}\n            decimals={0}\n          />\n          <Spacer size={10} />\n        </>\n      )}\n\n      {shouldShowElement(PlayerControlsElement.ProgressBar) && (\n        <>\n          <PlayerControlsProgressBar\n            subscribe={subscribe}\n            totalFrames={totalFrames}\n            onChange={(progress, isDraggingEnded) => {\n              seek(progress, !!isDraggingEnded);\n            }}\n          />\n          <Spacer size={10} />\n        </>\n      )}\n\n      {shouldShowElement(PlayerControlsElement.Loop) && (\n        <LoopButton isOn={loop} onClick={toggleLoop} />\n      )}\n    </div>\n  );\n};\n","import React, { DetailedHTMLProps, FC, HTMLAttributes } from \"react\";\n\ntype PlayerOverlayProps = DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement> & {\n  //\n};\n\n/**\n * Add a div with padding to the left and right of `size` / 2\n */\nconst PlayerOverlay: FC<PlayerOverlayProps> = ({ children, style, ...rest }) => (\n  <div\n    {...rest}\n    style={{\n      position: \"absolute\",\n      display: \"flex\",\n      width: \"100%\",\n      height: \"100%\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      backgroundColor: \"rgba(0,122,135,0.7)\",\n      zIndex: 1,\n      ...style,\n    }}\n  >\n    {children}\n  </div>\n);\n\nexport default PlayerOverlay;\n","import React, { FC } from \"react\";\nimport PlayerOverlay from \"./PlayerOverlay\";\n\nexport type PlayerErrorProps = {\n  show: boolean;\n  Component?: JSX.Element;\n  Content?: JSX.Element;\n};\n\n/**\n * Component that is displayed when the player is in the Error state\n */\nexport const PlayerFailure: FC<PlayerErrorProps> = ({ show, Component, Content }) => {\n  if (!show) {\n    return null;\n  }\n\n  if (Component) {\n    return Component;\n  }\n\n  return <PlayerOverlay>{Content ? Content : \"Couldn't load the animation\"}</PlayerOverlay>;\n};\n","import \"./PlayerLoading.less\";\nimport React, { FC } from \"react\";\nimport PlayerOverlay from \"../PlayerOverlay\";\n\nexport type PlayerLoadingProps = {\n  show: boolean;\n  Component?: JSX.Element;\n  Content?: JSX.Element;\n  color?: string;\n  size?: number;\n};\n\n/**\n * Component that is displayed when the player is in the Loading state\n */\nexport const PlayerLoading: FC<PlayerLoadingProps> = ({\n  show,\n  Component,\n  Content,\n  color = \"#FFFFFF\",\n  size = 80,\n}) => {\n  if (!show) {\n    return null;\n  }\n\n  if (Component) {\n    return Component;\n  }\n\n  const circles = [...Array(2).keys()].map((_, index) => (\n    <div\n      key={index}\n      style={{\n        borderColor: `${color}`,\n        borderWidth: size * 0.05,\n      }}\n    />\n  ));\n\n  return (\n    <PlayerOverlay>\n      {Content ? (\n        Content\n      ) : (\n        <div className={\"player-loading-spinner\"} style={{ width: size, height: size }}>\n          {circles}\n        </div>\n      )}\n    </PlayerOverlay>\n  );\n};\n","import React, { forwardRef, ForwardRefRenderFunction } from \"react\";\nimport { useLottie } from \"../hooks/useLottie\";\nimport { LottieProps, LottieState } from \"../types\";\nimport { PlayerContainer, PlayerDisplay, PlayerControls } from \"./player\";\nimport { PlayerFailure } from \"./player/PlayerFailure\";\nimport { PlayerLoading } from \"./player/PlayerLoading/PlayerLoading\";\n\n/**\n * Lottie's animation component\n *\n * TODO: change `Record<string, unknown>` in the actual type of the Ref\n *\n * @param props\n * @param ref\n */\nconst _Lottie: ForwardRefRenderFunction<Record<string, unknown>, LottieProps> = (props, ref) => {\n  const {\n    src,\n    initialValues,\n    enableReinitialize,\n    controls,\n    subscriptions,\n    LoadingOverlay,\n    FailureOverlay,\n    LoadingOverlayContent,\n    FailureOverlayContent,\n  } = props;\n\n  const { setContainerRef, state, totalFrames, loop, play, pause, toggleLoop, seek, subscribe } =\n    useLottie({\n      src,\n      initialValues,\n      enableReinitialize,\n      subscriptions,\n    });\n\n  return (\n    <PlayerContainer>\n      <PlayerLoading\n        show={state === LottieState.Loading}\n        Component={LoadingOverlay}\n        Content={LoadingOverlayContent}\n      />\n\n      <PlayerFailure\n        show={state === LottieState.Failure}\n        Component={FailureOverlay}\n        Content={FailureOverlayContent}\n      />\n\n      <PlayerDisplay ref={setContainerRef} />\n\n      <PlayerControls\n        show={state !== LottieState.Loading && state !== LottieState.Failure && !!controls}\n        elements={Array.isArray(controls) ? controls : undefined}\n        state={state}\n        totalFrames={totalFrames}\n        loop={loop}\n        play={play}\n        pause={pause}\n        seek={seek}\n        toggleLoop={toggleLoop}\n        subscribe={subscribe}\n      />\n    </PlayerContainer>\n  );\n};\n\nexport const Lottie = forwardRef(_Lottie);\n"],"names":["_jsx","_jsxs"],"mappings":"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"}